continue
@suggested_users
continue
@suggested_users
continue
suggested_users
continue
        @suggested_friends = User.find(suggested_friends_id)
suggested_friends_id = suggested_friends_id - followers_id
        suggested_friends_id = Follow.where(follower_id: followers_id).pluck(:followable_id)
followers_id = current_user.followees(User).pluck(:id)
continue
suggested_friends_id = suggested_friends_id - followers_id
        suggested_friends_id = Follow.where(follower_id: followers_id).pluck(:followable_id)
followers_id = current_user.followees(User).pluck(:id)
continue
suggested_friends_id = Follow.where(follower_id: followers_id)
suggested_friends_id = Follow.where(follower_id: followers_id).pluck(:id)
followers_id
followers_id = current_user.followees(User).pluck(:id)
current_user.followees(User)
continue
current_user.followees(User)
current_user.followers(User)
followers_id = current_user.followers(User).pluck(:id)
continue
user.last_seen_at + 5.minutes
continue
current_user.update(last_seen_at: Time.now)
continue
Message.second
Message.first
 Message.where(sender: current_user, receiver: @user)
continue
params
continue
Message.where(sender: current_user, receiver: @user)
continue
@user
receiver
current_user
continue
current_user
@user
 Message.where(sender: current_user, receiver: @user)
 Message.where(sender: current_user, receiver: @user).count
 Message.where(sender: current_user, receiver: @user)
continue
@message = sender.sender_messages.create(message_params)
params
continue
@user
@search = params[:search]
@search
continue
params
continue
params
continue
params
continue
params
continue
params
continue
current_user.followees(User).includes(:posts).pluck(:id)
current_user.followees(User).includes(:posts)
 @followed_users_id = current_user.followees(User).includes(:posts).pluck(:id)
continue
self
selg
session[:user_id]
get_current_user
message.sender_id
message.sender_id == get_current_user
continue
message.sender_id
get_current_user
<div class="message-data <%= message.sender_id == get_current_user ? 'text-right' : '' %>">
message.sender_id
continue
params
continue
params
continue
params
continue
params
@post
continue
params
@post
@like.save!
@like.save
continue
params
continue
params
continue
@user
params
continue
@user
current_user.toggle_follow!(@user)
continue
@user
continue
params
@user
continue
params
continue
@post = Post.find(params[:id])
params
continue
@users
@users = User.where("username LIKE ?", "%#{params[:user][:username].downcase}%")
continue
params
@post
continue
@post
post
params
continue
params
continue
params
continue
params
@post
fetch_post
continue
@post.destroy
@post
continue
@post.destroy
@post
continue
@comment.save
continue
comments_params.merge!({post: @post})
continue
@post
comments_params.merge!({post: @post})
continue
comments_params.merge!({post: @post})
continue
comments_params.merge!({post: @post})
@comment.save!comments_params.merge!({post: @post})
@comment.save!
continue
@like = current_user.likes.find_by(likeable: @post)
@post
continue
@post
@posts = Post.find_by(id: params[:id])
@like = current_user.likes.find_by(likeable: @post)
params
@post
@like = current_user.likes.find_by(likeable: @post)
continue
params
@posts = Post.find(id: params[:id])
continue
@like
continue
params
@like
continue
@like.save!
continue
@like
continue
params
continue
params
continue
params[:post][:medias]
params[:medias]
params
@post.save!
@post = current_user.posts.build(post_params)
@post.save!
current_user.posts.build(post_params)
continue
alert
flash
flashes.all
flash.all
flash["alert"]
flash.keys
continue
flash.keys
flash[:notice]
flash[:alert]
alert
notice
flash.first
flash
